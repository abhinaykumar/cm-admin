- edit_action = model_object.available_actions.select{ |act| act if act.action_type.eql?(:default) && act.name.eql?('edit') } if policy([:cm_admin, model_object.name.classify.constantize]).edit?
- destroy_action = model_object.available_actions.select{ |act| act if act.action_type.eql?(:default) && act.name.eql?('destroy') } if policy([:cm_admin, model_object.name.classify.constantize]).destroy?
- custom_actions = model_object.available_actions.select{ |act| act if act.route_type.eql?('member') && [:button, :modal].include?(act.display_type) }
- if custom_actions.any? || edit_action.present? || destroy_action.present?
  td.row-action-cell
    .row-action-tool
      button.secondary-btn.tool-btn
        span
          i.fa.fa-bars.bolder
        span
          i.fa.fa-angle-down
      .popup-card.table-export-popup.hidden
        - if edit_action.present?
          = link_to "#{page_url('edit', ar_object)}" do
            .popup-option
              span
                i.fa.fa-edit
              | Edit
        - if destroy_action.present?
          = link_to "#{page_url('destroy', ar_object)}", method: :delete do
            .popup-option
              span
                i.fa.fa-trash
              | Destroy
        - custom_actions.each do |custom_action|
          - if custom_action.display_if.call(ar_object)
            - if custom_action.display_type == :button
              = link_to cm_admin.send("#{model_object.name.underscore}_index_path") + '/' + custom_action.path.gsub(':id', ar_object.id.to_s), method: custom_action.verb do
                .popup-option
                  span
                    i class="#{custom_action.icon_name}"
                  = custom_action.name.humanize
            - elsif custom_action.display_type == :modal
              = link_to '', data: { bs_toggle: 'modal', bs_target: "##{custom_action.name.classify}Modal-#{ar_object.id.to_s}" } do
                .popup-option
                  span
                    i class="#{custom_action.icon_name}"
                  = custom_action.name.humanize

